.prose {
  --prose-color: var(--color-neutral-700);
  --prose-heading-color: var(--color-neutral-950);
  --prose-strong-color: var(--color-neutral-950);
  --prose-link-color: var(--color-link);
  --prose-code-color: var(--color-neutral-950);
  --prose-marker-color: color-mix(
    in oklab,
    var(--color-neutral-700) 25%,
    transparent
  );
  --prose-link-underline-color: currentColor;
  --prose-th-borders: var(--color-neutral-300);
  --prose-td-borders: var(--color-neutral-200);
  --prose-hr-color: color-mix(
    in oklab,
    var(--color-neutral-950) 5%,
    transparent
  );
  --prose-blockquote-border-color: var(--color-neutral-300);

  &:where(.dark, .dark *) {
    --prose-color: var(--color-neutral-300);
    --prose-heading-color: var(--color-white);
    --prose-strong-color: var(--color-white);
    --prose-link-color: var(--color-dark-link);
    --prose-code-color: var(--color-white);
    --prose-marker-color: color-mix(
      in oklab,
      var(--color-neutral-300) 35%,
      transparent
    );
    --prose-link-underline-color: currentColor;
    --prose-th-borders: var(--color-neutral-600);
    --prose-td-borders: var(--color-neutral-700);
    --prose-hr-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    --prose-blockquote-border-color: var(--color-neutral-600);
  }

  @media (prefers-color-scheme: dark) {
    &:where(.system, .system *) {
      --prose-color: var(--color-neutral-300);
      --prose-heading-color: var(--color-white);
      --prose-strong-color: var(--color-white);
      --prose-link-color: var(--color-white);
      --prose-code-color: var(--color-white);
      --prose-marker-color: color-mix(
        in oklab,
        var(--color-neutral-300) 35%,
        transparent
      );
      --prose-link-underline-color: currentColor;
      --prose-th-borders: var(--color-neutral-600);
      --prose-td-borders: var(--color-neutral-700);
      --prose-hr-color: color-mix(
        in oklab,
        var(--color-white) 10%,
        transparent
      );
      --prose-blockquote-border-color: var(--color-neutral-600);
    }
  }

  color: var(--prose-color);
  max-width: 110ch;
  font-size: 1rem;
  line-height: 2;

  :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 16px;
  }

  :where([class~="lead"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: #0969da;
    text-decoration: none;
    font-weight: 500;
  }

  &:where(.dark, .dark *)
    :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: #58a6ff;
  }

  :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)):hover {
    text-decoration: underline;
    text-underline-offset: 3px;
    text-decoration-color: currentColor;
    text-decoration-thickness: 1px;
  }

  :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--prose-strong-color);
    font-weight: 600;
  }

  :where(a strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  :where(blockquote strong):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    color: inherit;
  }

  :where(thead th strong):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    color: inherit;
  }

  :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: decimal;
    margin-top: 0;
    margin-bottom: 16px;
    padding-inline-start: 2em;
  }

  :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: disc;
    margin-top: 0;
    margin-bottom: 16px;
    padding-inline-start: 2em;
  }

  :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.25em;
  }

  :where(ol ol, ol ul, ul ol, ul ul):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    margin-top: 0;
    margin-bottom: 0;
  }

  :where(ol > li):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::marker {
    font-weight: 400;
    color: var(--tw-prose-counters);
  }

  :where(ul > li):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::marker {
    color: var(--tw-prose-bullets);
  }

  :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.25em;
  }

  :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    height: 0.05em;
    padding: 0;
    margin: 26px 0;
    background-color: #858585;
    border: 0;
  }

  &:where(.dark, .dark *)
    :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    background-color: #606060;
  }

  :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 400;
    font-style: normal;
    border-inline-start-width: 0.2rem;
    border-inline-start-color: #999999;
    color: #444444;
    quotes: none;
    margin-top: 1em;
    margin-bottom: 1em;
    padding-inline-start: 0.8em;
    background-color: transparent;
  }

  &:where(.dark, .dark *)
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: #c0c0c0;
    border-inline-start-color: #707070;
  }

  :where(blockquote p:first-of-type):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::before {
    content: none;
  }

  :where(blockquote p:last-of-type):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::after {
    content: none;
  }

  :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--prose-heading-color);
    font-weight: 600;
    font-size: 2em;
    margin-top: 0;
    margin-bottom: 0.4em;
    line-height: 1.25;
  }

  :where(h1 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 700;
    color: inherit;
  }

  :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--prose-heading-color);
    font-weight: 600;
    font-size: 1.5em;
    margin-top: 1em;
    margin-bottom: 0.4em;
    line-height: 1.25;
  }

  :where(h2 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 700;
    color: inherit;
  }

  :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--prose-heading-color);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 0.8em;
    margin-bottom: 0.4em;
    line-height: 1.25;
  }

  :where(h3 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 700;
    color: inherit;
  }

  :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--prose-heading-color);
    font-weight: 600;
    font-size: 1em;
    margin-top: 0.8em;
    margin-bottom: 0.4em;
    line-height: 1.25;
  }

  :where(h4 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 700;
    color: inherit;
  }

  :where(h5):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--prose-heading-color);
    font-weight: 600;
    font-size: 0.875em;
    margin-top: 0.8em;
    margin-bottom: 0.4em;
    line-height: 1.25;
  }

  :where(h6):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 600;
    font-size: 0.85em;
    margin-top: 0.8em;
    margin-bottom: 0.4em;
    line-height: 1.25;
  }

  :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    display: block;
    margin-top: 2em;
    margin-bottom: 2em;
  }

  :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 500;
    font-family: inherit;
    color: var(--tw-prose-kbd);
    font-size: 0.875em;
    border-radius: 0.3125rem;
    padding-top: 0.1875em;
    padding-inline-end: 0.375em;
    padding-bottom: 0.1875em;
    padding-inline-start: 0.375em;
  }

  :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--prose-code-color);
    font-size: 0.875em;
    background-color: rgba(175, 184, 193, 0.2);
    padding: 0.2em 0.4em;
    border-radius: 6px;
  }

  &:where(.dark, .dark *)
    :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    background-color: rgba(110, 118, 129, 0.15);
  }

  :where(code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::before {
    content: none;
  }

  :where(code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::after {
    content: none;
  }

  :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  :where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: 0.875em;
  }

  :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: 0.9em;
  }

  :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  :where(blockquote code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    color: inherit;
  }

  :where(thead th code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    color: inherit;
  }

  :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-pre-code);
    background-color: transparent;
    overflow-x: auto;
    font-weight: 400;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 6px;
    padding-top: 0.8571429em;
    padding-inline-end: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-inline-start: 1.1428571em;
    border: 1px solid #acacac;
    font-family:
      ui-monospace, SFMono-Regular, "SF Mono", Consolas, "Liberation Mono",
      Menlo, monospace;
  }

  &:where(.dark, .dark *)
    :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    background-color: transparent;
    border-color: #555555;
    color: #e6edf3;
  }

  :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }

  :where(pre code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::before {
    content: none;
  }

  :where(pre code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::after {
    content: none;
  }

  :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    width: 100%;
    table-layout: auto;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.7142857;
    border-collapse: collapse;
    border-spacing: 0;
  }

  :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 2px;
    border-bottom-color: #acacac;
    background-color: transparent;
  }

  &:where(.dark, .dark *)
    :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-color: #606060;
    background-color: transparent;
  }

  :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--prose-heading-color);
    font-weight: 600;
    vertical-align: bottom;
    padding: 6px 13px;
    border: 1px solid #acacac;
    text-align: left;
  }

  &:where(.dark, .dark *)
    :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-color: #606060;
  }

  :where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: #acacac;
  }

  &:where(.dark, .dark *)
    :where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-color: #606060;
  }

  :where(tbody tr:nth-child(2n)):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    background-color: transparent;
  }

  &:where(.dark, .dark *)
    :where(tbody tr:nth-child(2n)):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    background-color: transparent;
  }

  :where(tbody tr:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    border-bottom-width: 0;
  }

  :where(tbody td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: top;
    padding: 6px 13px;
    border: 1px solid #acacac;
  }

  &:where(.dark, .dark *)
    :where(tbody td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-color: #606060;
  }

  :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-top-width: 1px;
    border-top-color: #acacac;
  }

  &:where(.dark, .dark *)
    :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-top-color: #606060;
  }

  :where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: top;
    padding: 6px 13px;
    border: 1px solid #acacac;
  }

  &:where(.dark, .dark *)
    :where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-color: #606060;
  }

  :where(th, td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    text-align: start;
  }

  :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-top-width: 1px;
    border-top-color: var(--prose-th-borders);
  }

  :where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: top;
  }

  :where(th, td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    text-align: start;
  }

  :where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-captions);
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }

  :first-child:where(:not(.not-prose, .not-prose *)) {
    margin-top: 0;
  }

  :last-child:where(:not(.not-prose, .not-prose *)) {
    margin-bottom: 0;
  }

  :where(li):has(input[type="checkbox"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style: none;
    margin-left: -1.5em;
  }

  :where(li input[type="checkbox"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    margin: 0 0.5em 0.25em -1.5em;
    vertical-align: middle;
  }

  :where(.markdown-alert):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    padding: 0.5rem 1rem;
    margin-bottom: 16px;
    color: inherit;
    border-left: 0.25rem solid #acacac;
  }

  :where(.markdown-alert.markdown-alert-note):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    border-left-color: #acacac;
  }

  :where(.markdown-alert.markdown-alert-tip):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    border-left-color: #1a7f37;
  }

  :where(.markdown-alert.markdown-alert-important):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    border-left-color: #8250df;
  }

  :where(.markdown-alert.markdown-alert-warning):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    border-left-color: #9a6700;
  }

  :where(.markdown-alert.markdown-alert-caution):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    border-left-color: #cf222e;
  }
}

.prose-lg {
  font-size: 1.125rem;
  line-height: 1.7777778;

  :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }

  :where([class~="lead"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    font-size: 1.2222222em;
    line-height: 1.4545455;
    margin-top: 1.0909091em;
    margin-bottom: 1.0909091em;
  }

  :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.6666667em;
    margin-bottom: 1.6666667em;
    padding-inline-start: 1em;
  }

  :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 2.6666667em;
    margin-top: 0;
    margin-bottom: 0.8333333em;
    line-height: 1;
  }

  :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.6666667em;
    margin-top: 1.8666667em;
    margin-bottom: 1.0666667em;
    line-height: 1.3333333;
  }

  :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.3333333em;
    margin-top: 1.6666667em;
    margin-bottom: 0.6666667em;
    line-height: 1.5;
  }

  :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 0.4444444em;
    line-height: 1.5555556;
  }

  :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }

  :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }

  :where(picture > img):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    margin-top: 0;
    margin-bottom: 0;
  }

  :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }

  :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.8888889em;
    border-radius: 0.3125rem;
    padding-top: 0.2222222em;
    padding-inline-end: 0.4444444em;
    padding-bottom: 0.2222222em;
    padding-inline-start: 0.4444444em;
  }

  :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.8888889em;
  }

  :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.8666667em;
  }

  :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.875em;
  }

  :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.8888889em;
    line-height: 1.75;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.375rem;
    padding-top: 1em;
    padding-inline-end: 1.5em;
    padding-bottom: 1em;
    padding-inline-start: 1.5em;
  }

  :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-inline-start: 1.5555556em;
  }

  :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-inline-start: 1.5555556em;
  }

  :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.6666667em;
    margin-bottom: 0.6666667em;
  }

  :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0.4444444em;
  }

  :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0.4444444em;
  }

  :where(.prose-lg > ul > li p):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }

  :where(.prose-lg > ul > li > p:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    margin-top: 1.3333333em;
  }

  :where(.prose-lg > ul > li > p:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    margin-bottom: 1.333333;
  }
}
