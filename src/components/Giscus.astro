---
import { GISCUS_CONFIG } from '../siteConfig.ts';

interface Props {
  class?: string;
}

const { class: className = '' } = Astro.props;

const shouldRender = GISCUS_CONFIG.enabled && 
  GISCUS_CONFIG.repo && 
  GISCUS_CONFIG.repoId && 
  GISCUS_CONFIG.category && 
  GISCUS_CONFIG.categoryId;
---

{shouldRender && (
  <div class={`giscus-container ${className}`}>
    <div id="giscus-comments"></div>
    <script is:inline define:vars={{ 
      repo: GISCUS_CONFIG.repo,
      repoId: GISCUS_CONFIG.repoId,
      category: GISCUS_CONFIG.category,
      categoryId: GISCUS_CONFIG.categoryId,
      mapping: GISCUS_CONFIG.mapping,
      strict: GISCUS_CONFIG.strict,
      reactionsEnabled: GISCUS_CONFIG.reactionsEnabled,
      emitMetadata: GISCUS_CONFIG.emitMetadata,
      inputPosition: GISCUS_CONFIG.inputPosition,
      theme: GISCUS_CONFIG.theme,
      lang: GISCUS_CONFIG.lang,
      loading: GISCUS_CONFIG.loading,
    }}>
      function initializeGiscus() {
        const container = document.getElementById('giscus-comments');
        if (!container) return;

        container.innerHTML = '';

        const script = document.createElement('script');
        script.src = 'https://giscus.app/client.js';
        script.setAttribute('data-repo', repo);
        script.setAttribute('data-repo-id', repoId);
        script.setAttribute('data-category', category);
        script.setAttribute('data-category-id', categoryId);
        script.setAttribute('data-mapping', mapping);
        script.setAttribute('data-strict', strict ? '1' : '0');
        script.setAttribute('data-reactions-enabled', reactionsEnabled ? '1' : '0');
        script.setAttribute('data-emit-metadata', emitMetadata ? '1' : '0');
        script.setAttribute('data-input-position', inputPosition);
        script.setAttribute('data-lang', lang);
        script.setAttribute('data-loading', loading);
        script.crossOrigin = 'anonymous';
        script.async = true;

        const isDark = document.documentElement.classList.contains('dark');
        const currentTheme = isDark ? 'noborder_gray' : 'light';
        script.setAttribute('data-theme', currentTheme);

        container.appendChild(script);
      }

      function updateGiscusTheme() {
        const iframe = document.querySelector('iframe.giscus-frame');
        if (iframe) {
          const isDark = document.documentElement.classList.contains('dark');
          const giscusTheme = isDark ? 'noborder_gray' : 'light';
          
          iframe.contentWindow.postMessage(
            { giscus: { setConfig: { theme: giscusTheme } } },
            'https://giscus.app'
          );
        }
      }

      if (typeof window !== 'undefined') {
        window._updateTheme = function() {
          setTimeout(() => {
            updateGiscusTheme();
          }, 100);
        };

        document.addEventListener('astro:page-load', () => {
          setTimeout(() => {
            initializeGiscus();
          }, 100);
        });
        
        if (document.readyState !== 'loading') {
          setTimeout(() => {
            initializeGiscus();
          }, 100);
        }

        document.addEventListener('astro:after-swap', () => {
          setTimeout(() => {
            updateGiscusTheme();
          }, 100);
        });

        const observer = new MutationObserver((mutations) => {
          mutations.forEach((mutation) => {
            if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
              updateGiscusTheme();
            }
          });
        });

        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ['class']
        });
      }
    </script>
  </div>
)}

{!shouldRender && GISCUS_CONFIG.enabled && (
  <div class={`${className}`}>
    <div class="border border-dashed border-neutral-400 dark:border-neutral-500 rounded-lg p-6 flex flex-col items-center justify-center text-center gap-2">
      <h3 class="text-lg font-semibold">
        Comments Not Configured
      </h3>
      <p class="text-sm">
        Giscus comments are enabled but not configured. Check your site's configuration.
      </p>
    </div>
  </div>
)}

<style>
  .giscus-container {
    margin-top: 2.5rem;
  }
  
  :global(.giscus-frame) {
    width: 100%;
  }
</style>
